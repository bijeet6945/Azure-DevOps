# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java 
name: '$(Rev:r)'

parameters:
- name: businessGroup
  displayName: Select a Business Group
  type: string
  default: 'APIs'
  values:
  - 'APIs'
  - 'B2B'

- name: environment
  displayName: Select an Environment
  type: string
  default: 'ALL'
  values:
  - 'ALL'
  - 'DEV'
  - 'QA'
  - 'STAGE'
  - 'PROD'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: APIMANAGER 
  displayName: API MANAGER CONFIG
  jobs:
  - job: BuildApiManager
    displayName: Build API Manager

    steps:
    - script: echo "Building the project for ${{ parameters.environment }}"
      displayName: 'Run a one-line script'
    - script: |
        echo "Selected Business Group: ${{ parameters.businessGroup }}"
        echo "Selected Environment: ${{ parameters.environment }}"
    
    - task: Bash@3
      displayName: 'CONFIGURE API MANAGER'
      # env:
      #   ENVS: ${{ parameters.environments }}
      inputs:
        targetType: 'inline'
        script: |
          # Split the environments into an array
          IFS=',' read -r -a envArray <<< "${{ parameters.environment }}"

          # If 'ALL' is selected, replace with all possible environments
          if [[ " ${envArray[@]} " =~ " ALL " ]]; then
            envArray=("DEV" "QA" "STAGE" "PROD")
          else
            envArray=("${{ parameters.environment }}")
          fi

          # # If 'DEV' is explicitly selected, replace envArray with 'DEV' only
          # if [[ "${envArray[@]}" =~ " DEV " ]]; then
          #   envArray=("DEV")
          # fi

          echo "Environments to process: ${envArray[@]}"

          # # Define the list of environments
          # environments=("${{ parameters.environment }}")

          # if [[ " ${envArray[@]} " =~ " ALL " ]]; then
          #   environments=("DEV" "QA" "UAT")
          #   for environment in "${environments[@]}"; do 